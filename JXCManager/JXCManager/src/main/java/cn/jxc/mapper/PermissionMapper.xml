<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.jxc.mapper.PermissionMapper">

	<resultMap type="Permission" id="permissionMap">
		<id column="Permission_id" property="permissionId" />
		<result column="PermissionDesc" property="permissionDesc" />
		<result column="PermissionUrl" property="permissionUrl" />
		<result column="IsNavi" property="isNavi" />
		<result column="PermissionCode" property="permissionCode" />
	</resultMap>

	<sql id="permissionSql">
		per.Permission_id,per.PermissionDesc,per.PermissionUrl,per.IsNavi,per.PermissionCode
	</sql>

	<select id="getPermissionAll" resultMap="permissionMap">
		select
		<include refid="permissionSql" />
		from permission per
	</select>

	<select id="getPermissionByEmp" parameterType="string"
		resultMap="permissionMap">
		SELECT DISTINCT
		<include refid="permissionSql" />
		FROM permission per LEFT JOIN rolepermission
		ON
		per.Permission_id=rolepermission.PermissionId WHERE
		rolepermission.RoleId in (
		SELECT role.RoleId FROM role LEFT JOIN
		employeerole ON
		role.RoleId=employeerole.RoleId
		WHERE
		employeerole.EmpLoginName=(
		SELECT EmpLoginName FROM employee WHERE
		EmpLoginName=#{empLoginName}))
	</select>

	<select id="getPermissionByRole" parameterType="string"
		resultMap="permissionMap">
		SELECT
		<include refid="permissionSql" />
		FROM rolepermission rp,permission per
		WHERE rp.RoleId = #{roleId}
		AND
		rp.PermissionId = per.Permission_Id
	</select>

	<insert id="addPermission" parameterType="Permission">
		INSERT INTO
		`jxcdb`.`permission` (`Permission_id`, `PermissionDesc`,
		`PermissionUrl`, `IsNavi`, `PermissionCode`) VALUES (NULL,
		#{per.permissionDesc},
		#{per.permissionUrl}, #{per.isNavi},
		#{per.permissionCode});
	</insert>

	<update id="updatePermission" parameterType="Permission">
		UPDATE
		`jxcdb`.`permission` SET
		`PermissionDesc`=#{per.permissionDesc},
		`PermissionUrl`=#{per.permissionUrl}, `IsNavi`=#{per.isNavi},
		`PermissionCode`=#{per.permissionCode} WHERE
		(`Permission_id`=#{per.permissionId});
	</update>

	<delete id="deletePermission">
		delete from `jxcdb`.`permission` where
		Permission_id=#{perId}
	</delete>

	<insert id="addRolePermission">
		INSERT INTO `jxcdb`.`rolepermission`
		(`Role_Permission_id`, `RoleId`, `PermissionId`) VALUES (NULL,
		#{roleId},
		#{permissionId})
	</insert>
	
	<delete id="deletePermissionByRoleId" parameterType="int">
		delete from
		`jxcdb`.`rolepermission` where `RoleId`=#{roleId}
	</delete>
	
</mapper>
